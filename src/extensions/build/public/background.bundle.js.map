{"version":3,"file":"background.bundle.js","mappings":";;AAAA;AACA;AACA;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://react-visualizer/webpack/bootstrap","webpack://react-visualizer/webpack/runtime/make namespace object","webpack://react-visualizer/./src/extensions/background.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable */\n// @ts-nocheck\n\nconst extensions = 'https://developer.chrome.com/docs/extensions';\nconst webstore = 'https://developer.chrome.com/docs/webstore';\n\n\nchrome.runtime.onInstalled.addListener(async()=> {\n  chrome.contextMenus.create({\n    \"id\": \"cReactContextMenu\",\n    \"title\": \"C-React\",\n    \"contexts\": [\"selection\"]\n  });\n});\n\n\nchrome.contextMenus.onClicked.addListener((info, tab)=>{\n  console.log(\"item clicked\");\n  console.log(info.menuItemId);\n  if(info.menuItemId == \"cReactContextMenu\"){\n    console.log('onclikc working')\n    chrome.windows.create({\n      url: ('panel.html'),\n    })\n  }\n});\n\n// Background page -- background.js\nchrome.runtime.onConnect.addListener(function(devToolsConnection) {\n  // assign the listener function to a variable so we can remove it later\n  var devToolsListener = function(message, sender, sendResponse) {\n      // Inject a content script into the identified tab\n      console.log(message.tabId);\n      chrome.scripting.executeScript(message.tabId,\n          { file: message.scriptToInject });\n  }\n  // add the listener\n  devToolsConnection.onMessage.addListener(devToolsListener);\n\n  devToolsConnection.onDisconnect.addListener(function() {\n       devToolsConnection.onMessage.removeListener(devToolsListener);\n  });\n});\n\n\n"],"names":[],"sourceRoot":""}